// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reimann/proto.proto

package reimann;

public final class Proto {
  private Proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class State extends
      com.google.protobuf.GeneratedMessage {
    // Use State.newBuilder() to construct.
    private State() {
      initFields();
    }
    private State(boolean noInit) {}
    
    private static final State defaultInstance;
    public static State getDefaultInstance() {
      return defaultInstance;
    }
    
    public State getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return reimann.Proto.internal_static_State_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return reimann.Proto.internal_static_State_fieldAccessorTable;
    }
    
    // optional int64 time = 1;
    public static final int TIME_FIELD_NUMBER = 1;
    private boolean hasTime;
    private long time_ = 0L;
    public boolean hasTime() { return hasTime; }
    public long getTime() { return time_; }
    
    // optional string state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private java.lang.String state_ = "";
    public boolean hasState() { return hasState; }
    public java.lang.String getState() { return state_; }
    
    // optional string service = 3;
    public static final int SERVICE_FIELD_NUMBER = 3;
    private boolean hasService;
    private java.lang.String service_ = "";
    public boolean hasService() { return hasService; }
    public java.lang.String getService() { return service_; }
    
    // optional string host = 4;
    public static final int HOST_FIELD_NUMBER = 4;
    private boolean hasHost;
    private java.lang.String host_ = "";
    public boolean hasHost() { return hasHost; }
    public java.lang.String getHost() { return host_; }
    
    // optional string description = 5;
    public static final int DESCRIPTION_FIELD_NUMBER = 5;
    private boolean hasDescription;
    private java.lang.String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public java.lang.String getDescription() { return description_; }
    
    // optional bool once = 6;
    public static final int ONCE_FIELD_NUMBER = 6;
    private boolean hasOnce;
    private boolean once_ = false;
    public boolean hasOnce() { return hasOnce; }
    public boolean getOnce() { return once_; }
    
    // optional float metric_f = 15;
    public static final int METRIC_F_FIELD_NUMBER = 15;
    private boolean hasMetricF;
    private float metricF_ = 0F;
    public boolean hasMetricF() { return hasMetricF; }
    public float getMetricF() { return metricF_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTime()) {
        output.writeInt64(1, getTime());
      }
      if (hasState()) {
        output.writeString(2, getState());
      }
      if (hasService()) {
        output.writeString(3, getService());
      }
      if (hasHost()) {
        output.writeString(4, getHost());
      }
      if (hasDescription()) {
        output.writeString(5, getDescription());
      }
      if (hasOnce()) {
        output.writeBool(6, getOnce());
      }
      if (hasMetricF()) {
        output.writeFloat(15, getMetricF());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getTime());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getState());
      }
      if (hasService()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getService());
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getHost());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getDescription());
      }
      if (hasOnce()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getOnce());
      }
      if (hasMetricF()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, getMetricF());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static reimann.Proto.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static reimann.Proto.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static reimann.Proto.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static reimann.Proto.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static reimann.Proto.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static reimann.Proto.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static reimann.Proto.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(reimann.Proto.State prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private reimann.Proto.State result;
      
      // Construct using reimann.Proto.State.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new reimann.Proto.State();
        return builder;
      }
      
      protected reimann.Proto.State internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new reimann.Proto.State();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return reimann.Proto.State.getDescriptor();
      }
      
      public reimann.Proto.State getDefaultInstanceForType() {
        return reimann.Proto.State.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public reimann.Proto.State build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private reimann.Proto.State buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public reimann.Proto.State buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        reimann.Proto.State returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof reimann.Proto.State) {
          return mergeFrom((reimann.Proto.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(reimann.Proto.State other) {
        if (other == reimann.Proto.State.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasService()) {
          setService(other.getService());
        }
        if (other.hasHost()) {
          setHost(other.getHost());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasOnce()) {
          setOnce(other.getOnce());
        }
        if (other.hasMetricF()) {
          setMetricF(other.getMetricF());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTime(input.readInt64());
              break;
            }
            case 18: {
              setState(input.readString());
              break;
            }
            case 26: {
              setService(input.readString());
              break;
            }
            case 34: {
              setHost(input.readString());
              break;
            }
            case 42: {
              setDescription(input.readString());
              break;
            }
            case 48: {
              setOnce(input.readBool());
              break;
            }
            case 125: {
              setMetricF(input.readFloat());
              break;
            }
          }
        }
      }
      
      
      // optional int64 time = 1;
      public boolean hasTime() {
        return result.hasTime();
      }
      public long getTime() {
        return result.getTime();
      }
      public Builder setTime(long value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }
      
      // optional string state = 2;
      public boolean hasState() {
        return result.hasState();
      }
      public java.lang.String getState() {
        return result.getState();
      }
      public Builder setState(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = getDefaultInstance().getState();
        return this;
      }
      
      // optional string service = 3;
      public boolean hasService() {
        return result.hasService();
      }
      public java.lang.String getService() {
        return result.getService();
      }
      public Builder setService(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasService = true;
        result.service_ = value;
        return this;
      }
      public Builder clearService() {
        result.hasService = false;
        result.service_ = getDefaultInstance().getService();
        return this;
      }
      
      // optional string host = 4;
      public boolean hasHost() {
        return result.hasHost();
      }
      public java.lang.String getHost() {
        return result.getHost();
      }
      public Builder setHost(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = getDefaultInstance().getHost();
        return this;
      }
      
      // optional string description = 5;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public java.lang.String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // optional bool once = 6;
      public boolean hasOnce() {
        return result.hasOnce();
      }
      public boolean getOnce() {
        return result.getOnce();
      }
      public Builder setOnce(boolean value) {
        result.hasOnce = true;
        result.once_ = value;
        return this;
      }
      public Builder clearOnce() {
        result.hasOnce = false;
        result.once_ = false;
        return this;
      }
      
      // optional float metric_f = 15;
      public boolean hasMetricF() {
        return result.hasMetricF();
      }
      public float getMetricF() {
        return result.getMetricF();
      }
      public Builder setMetricF(float value) {
        result.hasMetricF = true;
        result.metricF_ = value;
        return this;
      }
      public Builder clearMetricF() {
        result.hasMetricF = false;
        result.metricF_ = 0F;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:State)
    }
    
    static {
      defaultInstance = new State(true);
      reimann.Proto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:State)
  }
  
  public static final class Event extends
      com.google.protobuf.GeneratedMessage {
    // Use Event.newBuilder() to construct.
    private Event() {
      initFields();
    }
    private Event(boolean noInit) {}
    
    private static final Event defaultInstance;
    public static Event getDefaultInstance() {
      return defaultInstance;
    }
    
    public Event getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return reimann.Proto.internal_static_Event_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return reimann.Proto.internal_static_Event_fieldAccessorTable;
    }
    
    // optional int64 time = 1;
    public static final int TIME_FIELD_NUMBER = 1;
    private boolean hasTime;
    private long time_ = 0L;
    public boolean hasTime() { return hasTime; }
    public long getTime() { return time_; }
    
    // optional string state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private java.lang.String state_ = "";
    public boolean hasState() { return hasState; }
    public java.lang.String getState() { return state_; }
    
    // optional string service = 3;
    public static final int SERVICE_FIELD_NUMBER = 3;
    private boolean hasService;
    private java.lang.String service_ = "";
    public boolean hasService() { return hasService; }
    public java.lang.String getService() { return service_; }
    
    // optional string host = 4;
    public static final int HOST_FIELD_NUMBER = 4;
    private boolean hasHost;
    private java.lang.String host_ = "";
    public boolean hasHost() { return hasHost; }
    public java.lang.String getHost() { return host_; }
    
    // optional string description = 5;
    public static final int DESCRIPTION_FIELD_NUMBER = 5;
    private boolean hasDescription;
    private java.lang.String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public java.lang.String getDescription() { return description_; }
    
    // optional float metric_f = 15;
    public static final int METRIC_F_FIELD_NUMBER = 15;
    private boolean hasMetricF;
    private float metricF_ = 0F;
    public boolean hasMetricF() { return hasMetricF; }
    public float getMetricF() { return metricF_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTime()) {
        output.writeInt64(1, getTime());
      }
      if (hasState()) {
        output.writeString(2, getState());
      }
      if (hasService()) {
        output.writeString(3, getService());
      }
      if (hasHost()) {
        output.writeString(4, getHost());
      }
      if (hasDescription()) {
        output.writeString(5, getDescription());
      }
      if (hasMetricF()) {
        output.writeFloat(15, getMetricF());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getTime());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getState());
      }
      if (hasService()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getService());
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getHost());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getDescription());
      }
      if (hasMetricF()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, getMetricF());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static reimann.Proto.Event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static reimann.Proto.Event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.Event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static reimann.Proto.Event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.Event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static reimann.Proto.Event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.Event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static reimann.Proto.Event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static reimann.Proto.Event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static reimann.Proto.Event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(reimann.Proto.Event prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private reimann.Proto.Event result;
      
      // Construct using reimann.Proto.Event.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new reimann.Proto.Event();
        return builder;
      }
      
      protected reimann.Proto.Event internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new reimann.Proto.Event();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return reimann.Proto.Event.getDescriptor();
      }
      
      public reimann.Proto.Event getDefaultInstanceForType() {
        return reimann.Proto.Event.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public reimann.Proto.Event build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private reimann.Proto.Event buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public reimann.Proto.Event buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        reimann.Proto.Event returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof reimann.Proto.Event) {
          return mergeFrom((reimann.Proto.Event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(reimann.Proto.Event other) {
        if (other == reimann.Proto.Event.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasService()) {
          setService(other.getService());
        }
        if (other.hasHost()) {
          setHost(other.getHost());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasMetricF()) {
          setMetricF(other.getMetricF());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTime(input.readInt64());
              break;
            }
            case 18: {
              setState(input.readString());
              break;
            }
            case 26: {
              setService(input.readString());
              break;
            }
            case 34: {
              setHost(input.readString());
              break;
            }
            case 42: {
              setDescription(input.readString());
              break;
            }
            case 125: {
              setMetricF(input.readFloat());
              break;
            }
          }
        }
      }
      
      
      // optional int64 time = 1;
      public boolean hasTime() {
        return result.hasTime();
      }
      public long getTime() {
        return result.getTime();
      }
      public Builder setTime(long value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }
      
      // optional string state = 2;
      public boolean hasState() {
        return result.hasState();
      }
      public java.lang.String getState() {
        return result.getState();
      }
      public Builder setState(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = getDefaultInstance().getState();
        return this;
      }
      
      // optional string service = 3;
      public boolean hasService() {
        return result.hasService();
      }
      public java.lang.String getService() {
        return result.getService();
      }
      public Builder setService(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasService = true;
        result.service_ = value;
        return this;
      }
      public Builder clearService() {
        result.hasService = false;
        result.service_ = getDefaultInstance().getService();
        return this;
      }
      
      // optional string host = 4;
      public boolean hasHost() {
        return result.hasHost();
      }
      public java.lang.String getHost() {
        return result.getHost();
      }
      public Builder setHost(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = getDefaultInstance().getHost();
        return this;
      }
      
      // optional string description = 5;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public java.lang.String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // optional float metric_f = 15;
      public boolean hasMetricF() {
        return result.hasMetricF();
      }
      public float getMetricF() {
        return result.getMetricF();
      }
      public Builder setMetricF(float value) {
        result.hasMetricF = true;
        result.metricF_ = value;
        return this;
      }
      public Builder clearMetricF() {
        result.hasMetricF = false;
        result.metricF_ = 0F;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Event)
    }
    
    static {
      defaultInstance = new Event(true);
      reimann.Proto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Event)
  }
  
  public static final class Query extends
      com.google.protobuf.GeneratedMessage {
    // Use Query.newBuilder() to construct.
    private Query() {
      initFields();
    }
    private Query(boolean noInit) {}
    
    private static final Query defaultInstance;
    public static Query getDefaultInstance() {
      return defaultInstance;
    }
    
    public Query getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return reimann.Proto.internal_static_Query_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return reimann.Proto.internal_static_Query_fieldAccessorTable;
    }
    
    // optional string string = 1;
    public static final int STRING_FIELD_NUMBER = 1;
    private boolean hasString;
    private java.lang.String string_ = "";
    public boolean hasString() { return hasString; }
    public java.lang.String getString() { return string_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasString()) {
        output.writeString(1, getString());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasString()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getString());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static reimann.Proto.Query parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static reimann.Proto.Query parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.Query parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static reimann.Proto.Query parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.Query parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static reimann.Proto.Query parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.Query parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static reimann.Proto.Query parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static reimann.Proto.Query parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static reimann.Proto.Query parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(reimann.Proto.Query prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private reimann.Proto.Query result;
      
      // Construct using reimann.Proto.Query.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new reimann.Proto.Query();
        return builder;
      }
      
      protected reimann.Proto.Query internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new reimann.Proto.Query();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return reimann.Proto.Query.getDescriptor();
      }
      
      public reimann.Proto.Query getDefaultInstanceForType() {
        return reimann.Proto.Query.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public reimann.Proto.Query build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private reimann.Proto.Query buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public reimann.Proto.Query buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        reimann.Proto.Query returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof reimann.Proto.Query) {
          return mergeFrom((reimann.Proto.Query)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(reimann.Proto.Query other) {
        if (other == reimann.Proto.Query.getDefaultInstance()) return this;
        if (other.hasString()) {
          setString(other.getString());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setString(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string string = 1;
      public boolean hasString() {
        return result.hasString();
      }
      public java.lang.String getString() {
        return result.getString();
      }
      public Builder setString(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasString = true;
        result.string_ = value;
        return this;
      }
      public Builder clearString() {
        result.hasString = false;
        result.string_ = getDefaultInstance().getString();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Query)
    }
    
    static {
      defaultInstance = new Query(true);
      reimann.Proto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Query)
  }
  
  public static final class Msg extends
      com.google.protobuf.GeneratedMessage {
    // Use Msg.newBuilder() to construct.
    private Msg() {
      initFields();
    }
    private Msg(boolean noInit) {}
    
    private static final Msg defaultInstance;
    public static Msg getDefaultInstance() {
      return defaultInstance;
    }
    
    public Msg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return reimann.Proto.internal_static_Msg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return reimann.Proto.internal_static_Msg_fieldAccessorTable;
    }
    
    // optional bool ok = 2;
    public static final int OK_FIELD_NUMBER = 2;
    private boolean hasOk;
    private boolean ok_ = false;
    public boolean hasOk() { return hasOk; }
    public boolean getOk() { return ok_; }
    
    // optional string error = 3;
    public static final int ERROR_FIELD_NUMBER = 3;
    private boolean hasError;
    private java.lang.String error_ = "";
    public boolean hasError() { return hasError; }
    public java.lang.String getError() { return error_; }
    
    // repeated .State states = 4;
    public static final int STATES_FIELD_NUMBER = 4;
    private java.util.List<reimann.Proto.State> states_ =
      java.util.Collections.emptyList();
    public java.util.List<reimann.Proto.State> getStatesList() {
      return states_;
    }
    public int getStatesCount() { return states_.size(); }
    public reimann.Proto.State getStates(int index) {
      return states_.get(index);
    }
    
    // optional .Query query = 5;
    public static final int QUERY_FIELD_NUMBER = 5;
    private boolean hasQuery;
    private reimann.Proto.Query query_;
    public boolean hasQuery() { return hasQuery; }
    public reimann.Proto.Query getQuery() { return query_; }
    
    // repeated .Event events = 6;
    public static final int EVENTS_FIELD_NUMBER = 6;
    private java.util.List<reimann.Proto.Event> events_ =
      java.util.Collections.emptyList();
    public java.util.List<reimann.Proto.Event> getEventsList() {
      return events_;
    }
    public int getEventsCount() { return events_.size(); }
    public reimann.Proto.Event getEvents(int index) {
      return events_.get(index);
    }
    
    private void initFields() {
      query_ = reimann.Proto.Query.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOk()) {
        output.writeBool(2, getOk());
      }
      if (hasError()) {
        output.writeString(3, getError());
      }
      for (reimann.Proto.State element : getStatesList()) {
        output.writeMessage(4, element);
      }
      if (hasQuery()) {
        output.writeMessage(5, getQuery());
      }
      for (reimann.Proto.Event element : getEventsList()) {
        output.writeMessage(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOk()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getOk());
      }
      if (hasError()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getError());
      }
      for (reimann.Proto.State element : getStatesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      if (hasQuery()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getQuery());
      }
      for (reimann.Proto.Event element : getEventsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static reimann.Proto.Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static reimann.Proto.Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static reimann.Proto.Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static reimann.Proto.Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static reimann.Proto.Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static reimann.Proto.Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static reimann.Proto.Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static reimann.Proto.Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(reimann.Proto.Msg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private reimann.Proto.Msg result;
      
      // Construct using reimann.Proto.Msg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new reimann.Proto.Msg();
        return builder;
      }
      
      protected reimann.Proto.Msg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new reimann.Proto.Msg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return reimann.Proto.Msg.getDescriptor();
      }
      
      public reimann.Proto.Msg getDefaultInstanceForType() {
        return reimann.Proto.Msg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public reimann.Proto.Msg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private reimann.Proto.Msg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public reimann.Proto.Msg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.states_ != java.util.Collections.EMPTY_LIST) {
          result.states_ =
            java.util.Collections.unmodifiableList(result.states_);
        }
        if (result.events_ != java.util.Collections.EMPTY_LIST) {
          result.events_ =
            java.util.Collections.unmodifiableList(result.events_);
        }
        reimann.Proto.Msg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof reimann.Proto.Msg) {
          return mergeFrom((reimann.Proto.Msg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(reimann.Proto.Msg other) {
        if (other == reimann.Proto.Msg.getDefaultInstance()) return this;
        if (other.hasOk()) {
          setOk(other.getOk());
        }
        if (other.hasError()) {
          setError(other.getError());
        }
        if (!other.states_.isEmpty()) {
          if (result.states_.isEmpty()) {
            result.states_ = new java.util.ArrayList<reimann.Proto.State>();
          }
          result.states_.addAll(other.states_);
        }
        if (other.hasQuery()) {
          mergeQuery(other.getQuery());
        }
        if (!other.events_.isEmpty()) {
          if (result.events_.isEmpty()) {
            result.events_ = new java.util.ArrayList<reimann.Proto.Event>();
          }
          result.events_.addAll(other.events_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 16: {
              setOk(input.readBool());
              break;
            }
            case 26: {
              setError(input.readString());
              break;
            }
            case 34: {
              reimann.Proto.State.Builder subBuilder = reimann.Proto.State.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStates(subBuilder.buildPartial());
              break;
            }
            case 42: {
              reimann.Proto.Query.Builder subBuilder = reimann.Proto.Query.newBuilder();
              if (hasQuery()) {
                subBuilder.mergeFrom(getQuery());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setQuery(subBuilder.buildPartial());
              break;
            }
            case 50: {
              reimann.Proto.Event.Builder subBuilder = reimann.Proto.Event.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEvents(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional bool ok = 2;
      public boolean hasOk() {
        return result.hasOk();
      }
      public boolean getOk() {
        return result.getOk();
      }
      public Builder setOk(boolean value) {
        result.hasOk = true;
        result.ok_ = value;
        return this;
      }
      public Builder clearOk() {
        result.hasOk = false;
        result.ok_ = false;
        return this;
      }
      
      // optional string error = 3;
      public boolean hasError() {
        return result.hasError();
      }
      public java.lang.String getError() {
        return result.getError();
      }
      public Builder setError(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder clearError() {
        result.hasError = false;
        result.error_ = getDefaultInstance().getError();
        return this;
      }
      
      // repeated .State states = 4;
      public java.util.List<reimann.Proto.State> getStatesList() {
        return java.util.Collections.unmodifiableList(result.states_);
      }
      public int getStatesCount() {
        return result.getStatesCount();
      }
      public reimann.Proto.State getStates(int index) {
        return result.getStates(index);
      }
      public Builder setStates(int index, reimann.Proto.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.states_.set(index, value);
        return this;
      }
      public Builder setStates(int index, reimann.Proto.State.Builder builderForValue) {
        result.states_.set(index, builderForValue.build());
        return this;
      }
      public Builder addStates(reimann.Proto.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.states_.isEmpty()) {
          result.states_ = new java.util.ArrayList<reimann.Proto.State>();
        }
        result.states_.add(value);
        return this;
      }
      public Builder addStates(reimann.Proto.State.Builder builderForValue) {
        if (result.states_.isEmpty()) {
          result.states_ = new java.util.ArrayList<reimann.Proto.State>();
        }
        result.states_.add(builderForValue.build());
        return this;
      }
      public Builder addAllStates(
          java.lang.Iterable<? extends reimann.Proto.State> values) {
        if (result.states_.isEmpty()) {
          result.states_ = new java.util.ArrayList<reimann.Proto.State>();
        }
        super.addAll(values, result.states_);
        return this;
      }
      public Builder clearStates() {
        result.states_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .Query query = 5;
      public boolean hasQuery() {
        return result.hasQuery();
      }
      public reimann.Proto.Query getQuery() {
        return result.getQuery();
      }
      public Builder setQuery(reimann.Proto.Query value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder setQuery(reimann.Proto.Query.Builder builderForValue) {
        result.hasQuery = true;
        result.query_ = builderForValue.build();
        return this;
      }
      public Builder mergeQuery(reimann.Proto.Query value) {
        if (result.hasQuery() &&
            result.query_ != reimann.Proto.Query.getDefaultInstance()) {
          result.query_ =
            reimann.Proto.Query.newBuilder(result.query_).mergeFrom(value).buildPartial();
        } else {
          result.query_ = value;
        }
        result.hasQuery = true;
        return this;
      }
      public Builder clearQuery() {
        result.hasQuery = false;
        result.query_ = reimann.Proto.Query.getDefaultInstance();
        return this;
      }
      
      // repeated .Event events = 6;
      public java.util.List<reimann.Proto.Event> getEventsList() {
        return java.util.Collections.unmodifiableList(result.events_);
      }
      public int getEventsCount() {
        return result.getEventsCount();
      }
      public reimann.Proto.Event getEvents(int index) {
        return result.getEvents(index);
      }
      public Builder setEvents(int index, reimann.Proto.Event value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.events_.set(index, value);
        return this;
      }
      public Builder setEvents(int index, reimann.Proto.Event.Builder builderForValue) {
        result.events_.set(index, builderForValue.build());
        return this;
      }
      public Builder addEvents(reimann.Proto.Event value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.events_.isEmpty()) {
          result.events_ = new java.util.ArrayList<reimann.Proto.Event>();
        }
        result.events_.add(value);
        return this;
      }
      public Builder addEvents(reimann.Proto.Event.Builder builderForValue) {
        if (result.events_.isEmpty()) {
          result.events_ = new java.util.ArrayList<reimann.Proto.Event>();
        }
        result.events_.add(builderForValue.build());
        return this;
      }
      public Builder addAllEvents(
          java.lang.Iterable<? extends reimann.Proto.Event> values) {
        if (result.events_.isEmpty()) {
          result.events_ = new java.util.ArrayList<reimann.Proto.Event>();
        }
        super.addAll(values, result.events_);
        return this;
      }
      public Builder clearEvents() {
        result.events_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Msg)
    }
    
    static {
      defaultInstance = new Msg(true);
      reimann.Proto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Msg)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_State_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_State_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Event_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Event_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Query_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Query_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Msg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Msg_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023reimann/proto.proto\"x\n\005State\022\014\n\004time\030\001" +
      " \001(\003\022\r\n\005state\030\002 \001(\t\022\017\n\007service\030\003 \001(\t\022\014\n\004" +
      "host\030\004 \001(\t\022\023\n\013description\030\005 \001(\t\022\014\n\004once\030" +
      "\006 \001(\010\022\020\n\010metric_f\030\017 \001(\002\"j\n\005Event\022\014\n\004time" +
      "\030\001 \001(\003\022\r\n\005state\030\002 \001(\t\022\017\n\007service\030\003 \001(\t\022\014" +
      "\n\004host\030\004 \001(\t\022\023\n\013description\030\005 \001(\t\022\020\n\010met" +
      "ric_f\030\017 \001(\002\"\027\n\005Query\022\016\n\006string\030\001 \001(\t\"g\n\003" +
      "Msg\022\n\n\002ok\030\002 \001(\010\022\r\n\005error\030\003 \001(\t\022\026\n\006states" +
      "\030\004 \003(\0132\006.State\022\025\n\005query\030\005 \001(\0132\006.Query\022\026\n" +
      "\006events\030\006 \003(\0132\006.EventB\020\n\007reimannB\005Proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_State_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_State_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_State_descriptor,
              new java.lang.String[] { "Time", "State", "Service", "Host", "Description", "Once", "MetricF", },
              reimann.Proto.State.class,
              reimann.Proto.State.Builder.class);
          internal_static_Event_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Event_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Event_descriptor,
              new java.lang.String[] { "Time", "State", "Service", "Host", "Description", "MetricF", },
              reimann.Proto.Event.class,
              reimann.Proto.Event.Builder.class);
          internal_static_Query_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Query_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Query_descriptor,
              new java.lang.String[] { "String", },
              reimann.Proto.Query.class,
              reimann.Proto.Query.Builder.class);
          internal_static_Msg_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_Msg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Msg_descriptor,
              new java.lang.String[] { "Ok", "Error", "States", "Query", "Events", },
              reimann.Proto.Msg.class,
              reimann.Proto.Msg.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
